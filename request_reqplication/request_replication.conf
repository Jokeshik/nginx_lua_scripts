upstream backend1 {
         ip_hash;
         server 192.168.1.1:8090;
}

upstream backend2 {
         ip_hash;
         server 192.168.1.2:8090;
}

upstream backend3 {
         ip_hash;
         server 192.168.1.3:8090;
}

server{
    listen 80;
    server_name  web.jokeshik.com;

    location /manage/clearDbMem {
        lua_need_request_body on;
        content_by_lua_file lua_scripts/request_replication.lua;
    }

    location /cleardbmem1 {
        proxy_pass_request_body on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-PROXY $proxy_add_x_forwarded_for;
        proxy_pass http://backend1/manage/clearDbMem;
    }

    location /cleardbmem2 {
        proxy_pass_request_body on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-PROXY $proxy_add_x_forwarded_for;
        proxy_pass http://backend2/manage/clearDbMem;
    }

    location /cleardbmem3 {
        proxy_pass_request_body on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-PROXY $proxy_add_x_forwarded_for;
        proxy_pass http://backend3/manage/clearDbMem;
    }

    location ~ / {       
        proxy_pass       http://backend1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-PROXY $proxy_add_x_forwarded_for;
    
    }
    access_log /data/logs/nginx/access.log main;
    error_log /data/logs/nginx/error.log;
}